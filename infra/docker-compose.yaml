version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.1
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.1.1
    ports:
      - 9092:9092
      - 29092:29092
    expose:
      - "29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - zookeeper

  # Creates sample topic
  kafka-setup:
    image: confluentinc/cp-kafka:5.1.1
    depends_on:
      - kafka
      - zookeeper
    command: >
      /bin/sh -c "
      set -e;
      set -x;
      echo Waiting for Kafka to be ready...;
      cub kafka-ready -b kafka:9092 1 30;
      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 4 --replication-factor 1 --topic hn.stories;
      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 4 --replication-factor 1 --topic hn.comments;
      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 4 --replication-factor 1 --topic hn.joiner-internal;
      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 4 --replication-factor 1 --topic hn.comments-with-story;
      "
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.5
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   cap_add:
  #     - IPC_LOCK
  #   ports:
  #     - 9200:9200
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data

  # elastic-setup:
  #   image: alpine:latest
  #   command: > 
  #     /bin/sh -c "
  #     apk add --no-cache bash curl;
  #     /tmp/wait-for-it.sh elasticsearch:9200 -t 0 -- curl --request PUT --location http://elasticsearch:9200/_index_template/hn-stories --header 'Content-Type: application/json' --data '@/tmp/stories-index-template.json';
  #     /tmp/wait-for-it.sh elasticsearch:9200 -t 0 -- curl --request PUT --location http://elasticsearch:9200/_index_template/hn-stories-comments --header 'Content-Type: application/json' --data '@/tmp/joined-index-template.json';
  #     "
  #   volumes:
  #     - "./index/wait-for-it.sh:/tmp/wait-for-it.sh"
  #     - "./index/stories-index-template.json:/tmp/stories-index-template.json"
  #     - "./index/joined-index-template.json:/tmp/joined-index-template.json"
  #   depends_on:
  #     - elasticsearch

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.17.5
  #   volumes:
  #     - "./pipelines/pipelines.yml:/usr/share/logstash/config/pipelines.yml"
  #     - "./pipelines/comments.conf:/usr/share/logstash/pipeline/comments/comments.conf"
  #     - "./pipelines/stories.conf:/usr/share/logstash/pipeline/stories/stories.conf"
  #   depends_on:
  #     - kafka
  #     - elasticsearch

volumes:
  elasticsearch_data:
